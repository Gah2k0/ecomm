openapi: 3.0.3
info:
  title: Ecomm - Order
  description: API to create and search for orders of the Order API
  version: 0.0.1
servers:
  - url: http://localhost:3000
    description: API Gateway
  - url: http://localhost:3001
    description: The service direct address(does not authenticate)
paths:
  /api/orders:
    post:
      summary: Creates a new order.
      security:
        - BearerAuth: []
      description: Receives a new order and saves it in the database.
      requestBody:
        content:
          application/json:
            schema:   
              $ref: "#/components/schemas/Create-Order"
      responses:
        201: 
          description: Order successfully created!
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
  /api/orders/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: string
      required: true
    get:
      summary: Searches for an order
      security:
        - BearerAuth: []
      description: Searches for a specific order using its ID as a parameter
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        400:
          description: The provided client does not exist
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
  /api/orders/{id}/confirm/{paymentId}:
    parameters:
    - name: id
      in: path
      schema:
        type: string
      required: true
    - name: paymentId
      in: path
      schema:
        type: number
      required: true
    patch:
      summary: Confirms an order
      security:
        - BearerAuth: []
      description: Confirms an order using a valid payment 
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Confirm-order-response"
        400:
          description: Client does not exist or payment could not be confirmed
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: An error has ocurred
    Create-Order:
      type: object
      properties:
        customerId: 
          type: string
          example: 63eb9269885b494eeb11829b
        deliveryAddress:
          type: object
          properties:
            street:
              type: string
              example: Rua Otávio Rola
            number:
              type: string
              example: 200
            complement:
              type: string
              example: casa
            district:
              type: string
              example: Nova Estação
            cep:
              type: string
              example: 69918-388
            city:
              type: string
              example: Rio Branco
            uf:
              type: string
              example: AC
        items:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
                example: 63ea759764794efad882359c
              name:
                type: string
                example: Mesa gamer de Teste
              quantity: 
                type: integer
                example: 1
              discount: 
                type: number
                example: 0
              unitPrice: 
                type: number
                example: 102.9
    Order: 
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: string
            status:
              type: string
        - $ref: "#/components/schemas/Create-Order"
    Confirm-order-response:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nameOnCard: 
          type: string
          example: "John Doe"
        status: 
          type: string
          example: "CONFIRMADO"
        value:
          type: number
          example: "30"
        cardNumber:
          type: string
          example: "1234567812345678"
        expirationDate:
          type: string
          example: "2030-01"
        createdAt:
          type: string
          example: "2023-02-10 16:34:07"
        updatedAt:
          type: string
          example: "2023-02-10 16:34:07"
    # Orders:
    #   type: array
    #   items:
    #   $ref: "#/components/schemas/Order"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


